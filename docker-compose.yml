version: '3'
services:

  testsql-postrges-server:
    container_name: testsql-postrges-server
    image: testsql-postrges-server
    build:
      context: docker/
      dockerfile: postgresql.dockerfile
    ports:
      - "5432:5432"
    volumes:
      - ./docker/data:/var/tmp/data:ro
    environment: 
      - POSTGRES_MULTIPLE_DATABASES=leecampbell
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mysecretpassword
      
      # - CONNECTION_URL=jdbc:postgresql://testsql-postrges-server:5432/postgres?user=postgres&password=mysecretpassword

  flyway-central:
    image: flyway/flyway
    command: -url=jdbc:postgresql://testsql-postrges-server:5432/leecampbell -schemas=central_internal -user=postgres -password=mysecretpassword -connectRetries=60 migrate
    
    volumes:
      - ./flyway/central/sql:/flyway/sql
      - ./flyway/central/config:/flyway/config
    depends_on:
      - testsql-postrges-server

  flyway-sales:
    image: flyway/flyway
    command: -url=jdbc:postgresql://testsql-postrges-server:5432/leecampbell -schemas=sales_published -user=postgres -password=mysecretpassword -connectRetries=60 migrate
    
    volumes:
      - ./flyway/sales/sql:/flyway/sql
      - ./flyway/sales/config:/flyway/config
    depends_on:
      - flyway-central

  flyway-marketing:
    image: flyway/flyway
    command: -url=jdbc:postgresql://testsql-postrges-server:5432/leecampbell -schemas=marketing_internal -user=postgres -password=mysecretpassword -connectRetries=60 migrate
    
    volumes:
      - ./flyway/marketing/sql:/flyway/sql
      - ./flyway/marketing/config:/flyway/config
    depends_on:
      - flyway-sales

  test:
    image: gradle 
    # command: gradle test --no-build-cache --rerun --console=verbose --info    #worked fine, just very noisy
    # command: gradle test --no-build-cache --rerun --console=plain --info    #worked fine, still verbose
    command: >
      bash -c "
      gradle test --no-build-cache --rerun --info
      && echo ' ---------------------------------------------------------------' 
      && echo '    Tests have completed.'
      && echo '    '
      && echo '    Press ctrl+c to exit the docker process'
      && echo ' ---------------------------------------------------------------' "
    # command: echo 'Press ctrl+c'
    working_dir: /home/gradle/project
    environment:
        - PG_SERVER=testsql-postrges-server
    volumes:
      - ./tests/kotlin:/home/gradle/project
    depends_on:
      - flyway-marketing
